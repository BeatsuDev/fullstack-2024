openapi: 3.0.3
info:
  title: Kazoot
  description: |-
    An application
  termsOfService: https://kazoot.no/terms-of-service
  contact:
    email: vkbugge@hotmail.com
  license:
    name: MIT License
    url: "https://opensource.org/licenses/MIT"
  version: 1.0.0
servers:
  - url: http://localhost:8080/
  - url: https://api.kazoot.no/
tags:
  - name: User
  - name: User Session
  - name: Quiz
  - name: Question

paths:
  /category:
    get:
      tags:
        - Category
      description: Get all categories
      operationId: getCategories
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
  /user:
    post:
      tags:
        - User
      description: Register a user (create a user)
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "409":
          description: User already exists
    put:
      tags:
        - User
      description: Update the information of a user
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "409":
          description: User already exists
  /user/{id}:
    get:
      tags:
        - User
      description: Get a specific user
      operationId: fetchUser
      parameters:
        - name: id
          description: The ID of the user
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    delete:
      tags:
        - User
      description: Delete a specific User
      operationId: deleteUser
      parameters:
        - name: id
          description: The ID of the user
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful response
  /user/session:
    post:
      tags:
        - User Session
      description: Log in with credentials
      operationId: login
      requestBody:
        description: Login credentials
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          headers:
            Set-Cookie:
              description: Cookie to be used for authentication.
              schema:
                type: string
                example: "Authorization=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1NzYyMjQxM"
        "401":
          description: Bad credentials
    put:
      tags:
        - User Session
      description: Refresh token
      operationId: refreshToken
      responses:
        "201":
          description: Successful operation
          headers:
            Set-Cookie:
              description: Cookie to be used for authentication.
              schema:
                type: string
                example: "Authorization=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1NzYyMjQxM"
        "401":
          description: Bad credentials
    get:
      tags:
        - User Session
      description: Get logged in user
      operationId: loggedInUser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Bad credentials
    delete:
      tags:
        - User Session
      description: Log out User
      operationId: logout
      responses:
        "204":
          description: Successful operation
  /quiz:
    post:
      tags:
        - Quiz
      description: Create a new quiz
      operationId: createQuiz
      requestBody:
        description: Quiz creation information
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuizCreate"
      responses:
        "201":
          description: Successfully created Quiz
        "401":
          description: Not logged in
    get:
      tags:
        - Quiz
      description: Get first page of quizzes
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: textSearch
          schema:
            type: string
            maxLength: 128
        - in: query
          name: minDifficulty
          schema:
            type: integer
        - in: query
          name: maxDifficulty
          schema:
            type: integer
        - in: query
          name: category
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Category"
      responses:
        "200":
          description: Successfully got the first page of quizzes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/QuizOverview"
  /quiz/{id}:
    get:
      tags:
        - Quiz
      description: Get all information about a quiz
      parameters:
        - name: id
          description: The ID of a quiz
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: "Successfully fetched the quiz"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quiz"

  /quiz/{id}/attempt:
    parameters:
      - name: id
        description: The ID of a quiz
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - Attempt
      description: Attempt a quiz
      operationId: attemptQuiz
      requestBody:
        description: Answers to the quiz
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/QuizAttempt"
      responses:
        "200":
          description: Successfully attempted the quiz
        "401":
          description: Not logged in
        "404":
          description: Quiz not found

  /quiz/{id}/feedback:
    parameters:
      - name: id
        description: The ID of a quiz
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - Feedback
      description: Give feedback on a quiz
      operationId: giveFeedback
      requestBody:
        description: Feedback information
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackCreate"
            example: { "feedback": "This quiz was great!" }
      responses:
        "201":
          description: Successfully created the question
        "401":
          description: Not logged in
        "404":
          description: Quiz not found
    get:
      tags:
        - Feedback
      description: Get all feedback on a quiz
      operationId: getFeedback
      responses:
        "201":
          description: Successfully created the question
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Feedback"
        "401":
          description: Not logged in
        "404":
          description: Quiz not found
  /quiz/{id}/question:
    parameters:
      - name: id
        description: The ID of a quiz
        in: path
        required: true
        schema:
          type: string
          format: uuid
  /quiz/{id}/collaborator:
    parameters:
      - name: id
        description: The ID of a quiz
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - Collaborator
      description: Add a collaborator to a quiz
      operationId: addCollaborator
      requestBody:
        description: Collaborator information
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuizAddCollaborator"
              example: { "email": "user@example.org" }
      responses:
        "200":
          description: Successfully added the collaborator
        "401":
          description: Not logged in
        "404":
          description: Quiz not found
    get:
      tags:
        - Collaborator
      description: Get all collaborators of a quiz
      operationId: getCollaborators
      responses:
        "200":
          description: Successfully got the collaborators
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Not logged in
        "404":
          description: Quiz not found
  /quiz/{id}/collaborator/{collaborator_id}:
    parameters:
      - name: id
        description: The ID of a quiz
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: collaborator_id
        description: The ID of the collaborator
        in: path
        required: true
        schema:
          type: string
    delete:
      tags:
        - Collaborator
      description: Remove a collaborator from a quiz
      operationId: removeCollaborator
      responses:
        "204":
          description: Successfully removed the collaborator
        "401":
          description: Not logged in
        "404":
          description: Quiz not found
  /question:
    post:
      tags:
        - Question
      description: Create a new question
      operationId: createQuestion
      requestBody:
        description: Question creation information
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionCreate"
            example:
              {
                "type": "MULTIPLE",
                "question": "What is the capital of Norway?",
                "correct_answer": "Oslo",
                "media_url": "https://example.com/image.jpg",
                "answer_options": ["Oslo", "Bergen", "Trondheim", "Stavanger"],
              }
      responses:
        "201":
          description: Successfully created the question
        "401":
          description: Not logged in
        "403":
          description: "Not the creator of the quiz"
  /question/{question_id}:
    parameters:
      - name: question_id
        description: The ID of the question
        in: path
        required: true
        schema:
          type: integer
    put:
      tags:
        - Question
      description: Update a question
      operationId: updateQuestion
      requestBody:
        description: Question update information
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionCreate"
            example:
              {
                "type": "MULTIPLE",
                "question": "What is the capital of Norway?",
                "correct_answer": "Oslo",
                "media_url": "https://example.com/image.jpg",
                "answer_options": ["Oslo", "Bergen", "Trondheim", "Stavanger"],
              }
      responses:
        "200":
          description: Successfully updated the question
        "404":
          description: Question not found
        "401":
          description: Not logged in
        "403":
          description: "Not the creator of the quiz"
    delete:
      tags:
        - Question
      description: Delete a question
      operationId: deleteQuestion
      responses:
        "204":
          description: Successfully deleted the question
        "404":
          description: Question not found
        "401":
          description: Not logged in
        "403":
          description: "Not the creator of the quiz"
components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    UserUpdate:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    UserCreate:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    Category:
      type: object
      required:
        - name
        - color
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 32
        color:
          type: string
          minLength: 4
          maxLength: 7
    FeedbackCreate:
      type: object
      required:
        - feedback
      properties:
        feedback:
          type: string
          maxLength: 1024
    Feedback:
      type: object
      required:
        - id
        - quiz_id
        - username
        - feedback
        - created_at
      properties:
        id:
          type: integer
        quiz_id:
          type: string
          format: uuid
        username:
          type: string
        feedback:
          type: string
          maxLength: 1024
        created_at:
          type: string
          format: date-time
    QuestionCreate:
      type: object
      required:
        - quizId
        - question
      properties:
        quizId:
          type: string
          format: uuid
        question:
          type: string
          maxLength: 128
        answer:
          string:
          maxLength: 128
        options:
          type: array
          items:
            type: string
            maxLength: 4
    Question:
      type: object
      required:
        - question
      properties:
        id:
          type: string
          format: uuid
        question:
          type: string
          maxLength: 128
        options:
          type: array
          items:
            type: string
            maxLength: 4
    QuizCreate:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          minLength: 5
          maxLength: 128
        description:
          type: string
          maxLength: 2000
        difficulty:
          type: integer
        categories:
          type: array
          items:
            type: string
            format: uuid

    QuizOverview:
      type: object
      required:
        - id
        - title
        - description
        - categories
        - creator
        - created_at
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          minLength: 5
          maxLength: 128
        description:
          type: string
          maxLength: 2000
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
        creator:
          $ref: "#/components/schemas/User"
        created_at:
          type: string
          format: date-time
    Quiz:
      type: object
      required:
        - id
        - title
        - description
        - categories
        - feedbacks
        - questions
        - creator
        - created_at
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          minLength: 5
          maxLength: 128
        description:
          type: string
          maxLength: 2000
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
        feedbacks:
          type: array
          items:
            $ref: "#/components/schemas/Feedback"
        questions:
          type: array
          items:
            $ref: "#/components/schemas/Question"
        creator:
          $ref: "#/components/schemas/User"
        created_at:
          type: string
          format: date-time
    QuizAttempt:
      type: object
      properties:
        question_id:
          type: integer
        answer:
          type: string
    QuizAddCollaborator:
      type: object
      required:
        - email
      properties:
        email:
          type: string
